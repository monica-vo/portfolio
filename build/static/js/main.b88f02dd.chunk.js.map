{"version":3,"sources":["img/me1.JPG","NavBar.js","Middle.js","Right.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","class","href","id","action","type","placeholder","name","Middle","Right","src","animage","alt","Footer","target","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,iC,0JCkC5BC,MA5Bf,WACI,OACI,yBAAKC,UAAU,cACf,4BACE,4BAAI,uBAAGC,MAAM,SAASC,KAAK,SAAvB,SACJ,4BAAI,uBAAGC,GAAG,QAAQD,KAAK,UAAnB,UACJ,wBAAID,MAAM,YACR,uBAAGC,KAAK,qBAAqBD,MAAM,WAAnC,YACA,yBAAKA,MAAM,oBACT,uBAAGC,KAAK,KAAR,WACA,uBAAGA,KAAK,KAAR,aACA,uBAAGA,KAAK,KAAR,aACA,uBAAGA,KAAK,KAAR,kBAGJ,4BAAI,uBAAGC,GAAG,UAAUD,KAAK,YAArB,aAEN,yBAAKD,MAAM,oBACf,0BAAMG,OAAO,oBACX,2BAAOC,KAAK,OAAOC,YAAY,WAAWC,KAAK,WAC/C,4BAAQF,KAAK,UAAS,uBAAGJ,MAAM,sB,MCbtBO,MARf,WACI,OAEI,yBAAKR,UAAU,cAAf,c,gBCQOS,MARf,WACI,OACI,yBAAKT,UAAU,aACf,yBAAKU,IAAKC,IAASX,UAAU,WAAWY,IAAI,WCerCC,MArBf,WACI,OACI,yBAAKb,UAAU,cACf,uBACEA,UAAU,WACVE,KAAK,qDACLY,OAAO,SACPC,IAAI,uBAJN,eAOA,uBACAf,UAAU,WACRE,KAAK,yBACLY,OAAO,SACPC,IAAI,uBAJN,yBCIOC,MAZf,WACE,OACE,yBAAKhB,UAAU,OACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCDeiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b88f02dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me1.465c415c.JPG\";","import React from 'react';\nimport './App.css';\n\n\n\n\nfunction NavBar(){\n    return(\n        <div className=\"App-navbar\">\n        <ul>\n          <li><a class=\"active\" href=\"#home\">Home</a></li>\n          <li><a id=\"about\" href=\"#about\">About</a></li>\n          <li class=\"dropdown\">\n            <a href=\"javascript:void(0)\" class=\"dropbtn\">Projects</a>\n            <div class=\"dropdown-content\">\n              <a href=\"#\">KeyCode</a>\n              <a href=\"#\">Dice game</a>\n              <a href=\"#\">Cyber Pet</a>\n              <a href=\"#\">Cash Machine</a>\n            </div>\n          </li>\n          <li><a id=\"contact\" href=\"#contact\">Contact</a></li>\n        </ul>\n        <div class=\"search-container\">\n    <form action=\"/action_page.php\">\n      <input type=\"text\" placeholder=\"Search..\" name=\"search\"/>\n      <button type=\"submit\"><i class=\"fa fa-search\"></i></button>\n    </form>\n  </div>\n  </div>\n  );\n\n}\n\nexport default NavBar;","import React from 'react';\nimport './App.css';\nimport Text from './Text'\n\n\nfunction Middle(){\n    return(\n\n        <div className=\"App-middle\">Monica VO</div>\n       \n    );\n}\n\nexport default Middle;","import React from 'react';\nimport animage from './img/me1.JPG';\nimport './App.css';\n\n\n\n\n\nfunction Right(){\n    return(\n        <div className=\"App-right\">\n        <img src={animage} className=\"App-logo\" alt=\"logo\" />\n      </div>\n    )\n}\n\nexport default Right;","import React from 'react';\nimport './App.css';\n\n\n\nfunction Footer(){\n    return(\n        <div className=\"App-footer\">\n        <a\n          className=\"App-link\"\n          href=\"https://wearecodenation.com/courses/coding/master/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          Code Nation\n        </a>\n        <a\n        className=\"App-link\"\n          href=\"http://www.open.ac.uk/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          The Open University\n        </a>\n      </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport NavBar from './NavBar';\nimport Middle from './Middle';\nimport Right from './Right';\nimport Footer from './Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <NavBar/>\n     <Middle/>\n     <Right/>\n     <Footer/>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}